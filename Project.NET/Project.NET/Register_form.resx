<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /9k=
</value>
  </data>
</root>